{"version":3,"sources":["App1.js","App.js","reportWebVitals.js","index.js"],"names":["App1","props","state","items","loading","this","refs","myscroll","addEventListener","scrollTop","clientHeight","scrollHeight","loadMore","i","push","class","setState","setTimeout","className","ref","style","height","overflow","showItems","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNA2DmBA,E,kDAvDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,EACPC,SAAS,GAJM,E,qDAOnB,WAAqB,IAAD,OAElBC,KAAKC,KAAKC,SAASC,iBAAiB,UAAU,WAE1C,EAAKF,KAAKC,SAASE,UAAY,EAAKH,KAAKC,SAASG,cAClD,EAAKJ,KAAKC,SAASI,cAEnB,EAAKC,gB,uBAKX,WAEE,IADA,IAAIT,EAAQ,GACHU,EAAI,EAAGA,EAAIR,KAAKH,MAAMC,MAAOU,IACpCV,EAAMW,KAAK,qBAAIC,MAAM,cAAV,UAAwB,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,uBAAjD,cACT,uBAAK,uBAAK,uBAAK,uBAAK,uBAAK,2BAE7B,OAAOZ,I,sBAGT,WAAY,IAAD,OACTE,KAAKW,SAAS,CAAEZ,SAAS,IACzBa,YAAW,WACT,EAAKD,SAAS,CAAEb,MAAO,EAAKD,MAAMC,MAAQ,EAAGC,SAAS,MACrD,O,oBAGL,WACE,OACE,sBACEc,UAAU,MACVC,IAAI,WACJC,MAAO,CAAEC,OAAQ,QAASC,SAAU,QAHtC,UAME,6BACGjB,KAAKkB,cAEPlB,KAAKH,MAAME,QACR,KACA,U,GAjDOoB,aCuBRC,MAtBf,WAiBI,OACE,cAAC,EAAD,KCVSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9d411207.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n    import \"./App.css\";\r\n    \r\n    class App1 extends Component {\r\n      constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          items: 2,\r\n          loading: false\r\n        };\r\n      }\r\n      componentDidMount() {\r\n        // Detect when scrolled to bottom.\r\n        this.refs.myscroll.addEventListener(\"scroll\", () => {\r\n          if (\r\n            this.refs.myscroll.scrollTop + this.refs.myscroll.clientHeight >=\r\n            this.refs.myscroll.scrollHeight\r\n          ) {\r\n            this.loadMore();\r\n          }\r\n        });\r\n      }\r\n    \r\n      showItems() {\r\n        var items = [];\r\n        for (var i = 0; i < this.state.items; i++) {\r\n          items.push(<h1 class=\"text-center\"><br/><br/><br/><br/><br/><br/>Hello World\r\n            <br/><br/><br/><br/><br/><br/></h1>);\r\n        }\r\n        return items;\r\n      }\r\n    \r\n      loadMore() {\r\n        this.setState({ loading: true });\r\n        setTimeout(() => {\r\n          this.setState({ items: this.state.items + 2, loading: false });\r\n        }, 500);\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <div\r\n            className=\"App\"\r\n            ref=\"myscroll\"\r\n            style={{ height: \"500px\", overflow: \"auto\" }}\r\n          >\r\n            \r\n            <ul>\r\n              {this.showItems()}\r\n            </ul>\r\n            {this.state.loading\r\n              ? null\r\n              : \"\"}\r\n    \r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    \r\n    export default App1;","import React, { Component } from 'react'\r\nimport './App.css'\r\nimport App1 from './App1'\r\n\r\nfunction App(){\r\n\r\n  var array=[0,0];\r\n  var a2=0\r\n\r\n\r\n\r\n  function handleClick(e) {\r\n    var a= e.target.id\r\n    if(array[0]!=a && array[1]!=a){\r\n    a2=array[0]\r\n    array[0]=array[1]; array[1]=a;\r\n\r\n    if(document.getElementById(array[0]))document.getElementById(array[0]).style.backgroundColor='blue'\r\n    if(document.getElementById(array[1]))document.getElementById(array[1]).style.backgroundColor='blue'\r\n    if(document.getElementById(a2))document.getElementById(a2).style.backgroundColor='red'\r\n  }}\r\n    return (\r\n      <App1/>\r\n    )\r\n  }\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}